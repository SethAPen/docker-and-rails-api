version: "3"
networks:
  default:
    external:
      name: proxy
services:
  traefik:
    image: traefik:alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
      - ./acme.json:/acme.json
  client:
    image: [your_image_name_here]
    restart: always
    labels:
      - "traefik.backend=client"
      - "traefik.docker.network=proxy"
      - "traefik.frontend.rule=Host:[host_domain_name_here]
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.default.protocol=http"
      - "traefik.frontend.priority=10"
  api:
    restart: always
    command: bash -c "RAILS_ENV=${RAILS_ENV} rails db:create db:migrate db:seed && RAILS_ENV=${RAILS_ENV} rails s -p ${PORT} -b '0.0.0.0'"
    image: [your_image_name_here]
    labels:
      - "traefik.backend=api"
      - "traefik.docker.network=proxy"
      - "traefik.enable=true"
      - "traefik.port=3001"
      - "traefik.frontend.rule=PathPrefixStrip:/api/"
      - "traefik.default.protocol=http"
      - "traefik.frontend.priority=20"
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - postgres
    environment:
      DATABASE_URL: ${DATABASE_URL}
      RAILS_ENV: ${RAILS_ENV}
      PORT: ${PORT}
  postgres:
    image: postgres:10-alpine
    restart: always
    volumes:
      - pgdb:/var/lib/postgresql/data
    labels:
      - "traefik.postgres=postgres"
      - "traefik.docker.network=proxy"
      - "traefik.enable=true"
      - "traefik.port=5432"
      - "traefik.default.protocol=http"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

#prettier-ignore
volumes:
  pgdb:
